{"version":3,"file":"errors.js","sourceRoot":"","sources":["../../../../../../bak_node_modules/rxjs/src/internal/ajax/errors.ts"],"names":[],"mappings":";;;AACA,qDAAkD;AAClD,+DAA4D;AA6C5D;;;;;;;;GAQG;AACU,QAAA,SAAS,GAAkB,IAAA,mCAAgB,EACtD,CAAC,MAAM,EAAE,EAAE,CACT,SAAS,aAAa,CAAY,OAAe,EAAE,GAAmB,EAAE,OAAoB;IAC1F,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;IACxB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;IACzB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC;IACrC,IAAI,QAAa,CAAC;IAClB,IAAI;QACF,8DAA8D;QAC9D,oEAAoE;QACpE,QAAQ,GAAG,IAAA,+BAAc,EAAC,GAAG,CAAC,CAAC;KAChC;IAAC,OAAO,GAAG,EAAE;QACZ,QAAQ,GAAG,GAAG,CAAC,YAAY,CAAC;KAC7B;IACD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC3B,CAAC,CACJ,CAAC;AAYF;;;;;;;;;GASG;AACU,QAAA,gBAAgB,GAAyB,CAAC,GAAG,EAAE;IAC1D,SAAS,oBAAoB,CAAY,GAAmB,EAAE,OAAoB;QAChF,iBAAS,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;IACD,oBAAoB,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAS,CAAC,SAAS,CAAC,CAAC;IACpE,OAAO,oBAAoB,CAAC;AAC9B,CAAC,CAAC,EAAS,CAAC","sourcesContent":["import { AjaxRequest } from './types';\nimport { getXHRResponse } from './getXHRResponse';\nimport { createErrorClass } from '../util/createErrorClass';\n\n/**\n * A normalized AJAX error.\n *\n * @see {@link ajax}\n *\n * @class AjaxError\n */\nexport interface AjaxError extends Error {\n  /**\n   * The XHR instance associated with the error.\n   */\n  xhr: XMLHttpRequest;\n\n  /**\n   * The AjaxRequest associated with the error.\n   */\n  request: AjaxRequest;\n\n  /**\n   * The HTTP status code, if the request has completed. If not,\n   * it is set to `0`.\n   */\n  status: number;\n\n  /**\n   * The responseType (e.g. 'json', 'arraybuffer', or 'xml').\n   */\n  responseType: XMLHttpRequestResponseType;\n\n  /**\n   * The response data.\n   */\n  response: any;\n}\n\nexport interface AjaxErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string, xhr: XMLHttpRequest, request: AjaxRequest): AjaxError;\n}\n\n/**\n * Thrown when an error occurs during an AJAX request.\n * This is only exported because it is useful for checking to see if an error\n * is an `instanceof AjaxError`. DO NOT create new instances of `AjaxError` with\n * the constructor.\n *\n * @class AjaxError\n * @see {@link ajax}\n */\nexport const AjaxError: AjaxErrorCtor = createErrorClass(\n  (_super) =>\n    function AjaxErrorImpl(this: any, message: string, xhr: XMLHttpRequest, request: AjaxRequest) {\n      this.message = message;\n      this.name = 'AjaxError';\n      this.xhr = xhr;\n      this.request = request;\n      this.status = xhr.status;\n      this.responseType = xhr.responseType;\n      let response: any;\n      try {\n        // This can throw in IE, because we have to do a JSON.parse of\n        // the response in some cases to get the expected response property.\n        response = getXHRResponse(xhr);\n      } catch (err) {\n        response = xhr.responseText;\n      }\n      this.response = response;\n    }\n);\n\nexport interface AjaxTimeoutError extends AjaxError {}\n\nexport interface AjaxTimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (xhr: XMLHttpRequest, request: AjaxRequest): AjaxTimeoutError;\n}\n\n/**\n * Thrown when an AJAX request times out. Not to be confused with {@link TimeoutError}.\n *\n * This is exported only because it is useful for checking to see if errors are an\n * `instanceof AjaxTimeoutError`. DO NOT use the constructor to create an instance of\n * this type.\n *\n * @class AjaxTimeoutError\n * @see {@link ajax}\n */\nexport const AjaxTimeoutError: AjaxTimeoutErrorCtor = (() => {\n  function AjaxTimeoutErrorImpl(this: any, xhr: XMLHttpRequest, request: AjaxRequest) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n  }\n  AjaxTimeoutErrorImpl.prototype = Object.create(AjaxError.prototype);\n  return AjaxTimeoutErrorImpl;\n})() as any;\n"]}