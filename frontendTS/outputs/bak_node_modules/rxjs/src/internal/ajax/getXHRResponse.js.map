{"version":3,"file":"getXHRResponse.js","sourceRoot":"","sources":["../../../../../../bak_node_modules/rxjs/src/internal/ajax/getXHRResponse.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;GAWG;AACH,SAAgB,cAAc,CAAC,GAAmB;IAChD,QAAQ,GAAG,CAAC,YAAY,EAAE;QACxB,KAAK,MAAM,CAAC,CAAC;YACX,IAAI,UAAU,IAAI,GAAG,EAAE;gBACrB,OAAO,GAAG,CAAC,QAAQ,CAAC;aACrB;iBAAM;gBACL,KAAK;gBACL,MAAM,KAAK,GAAQ,GAAG,CAAC;gBACvB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;aACvC;SACF;QACD,KAAK,UAAU;YACb,OAAO,GAAG,CAAC,WAAW,CAAC;QACzB,KAAK,MAAM,CAAC;QACZ,OAAO,CAAC,CAAC;YACP,IAAI,UAAU,IAAI,GAAG,EAAE;gBACrB,OAAO,GAAG,CAAC,QAAQ,CAAC;aACrB;iBAAM;gBACL,KAAK;gBACL,MAAM,KAAK,GAAQ,GAAG,CAAC;gBACvB,OAAO,KAAK,CAAC,YAAY,CAAC;aAC3B;SACF;KACF;AACH,CAAC;AAxBD,wCAwBC","sourcesContent":["/**\n * Gets what should be in the `response` property of the XHR. However,\n * since we still support the final versions of IE, we need to do a little\n * checking here to make sure that we get the right thing back. Consequently,\n * we need to do a JSON.parse() in here, which *could* throw if the response\n * isn't valid JSON.\n *\n * This is used both in creating an AjaxResponse, and in creating certain errors\n * that we throw, so we can give the user whatever was in the response property.\n *\n * @param xhr The XHR to examine the response of\n */\nexport function getXHRResponse(xhr: XMLHttpRequest) {\n  switch (xhr.responseType) {\n    case 'json': {\n      if ('response' in xhr) {\n        return xhr.response;\n      } else {\n        // IE\n        const ieXHR: any = xhr;\n        return JSON.parse(ieXHR.responseText);\n      }\n    }\n    case 'document':\n      return xhr.responseXML;\n    case 'text':\n    default: {\n      if ('response' in xhr) {\n        return xhr.response;\n      } else {\n        // IE\n        const ieXHR: any = xhr;\n        return ieXHR.responseText;\n      }\n    }\n  }\n}\n"]}