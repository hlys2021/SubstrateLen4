{"version":3,"file":"AnyCatcher.js","sourceRoot":"","sources":["../../../../../bak_node_modules/rxjs/src/internal/AnyCatcher.ts"],"names":[],"mappings":"","sourcesContent":["/*\n * Note that we cannot apply the `internal` tag here because the declaration\n * needs to survive the `stripInternal` option. Otherwise, `AnyCatcher` will\n * be `any` in the `.d.ts` files.\n */\ndeclare const anyCatcherSymbol: unique symbol;\n\n/**\n * This is just a type that we're using to identify `any` being passed to\n * function overloads. This is used because of situations like {@link forkJoin},\n * where it could return an `Observable<T[]>` or an `Observable<{ [key: K]: T }>`,\n * so `forkJoin(any)` would mean we need to return `Observable<unknown>`.\n */\nexport type AnyCatcher = typeof anyCatcherSymbol;\n"]}