{"version":3,"file":"UnsubscriptionError.js","sourceRoot":"","sources":["../../../../../../bak_node_modules/rxjs/src/internal/util/UnsubscriptionError.ts"],"names":[],"mappings":";;;AAAA,yDAAsD;AActD;;;GAGG;AACU,QAAA,mBAAmB,GAA4B,IAAA,mCAAgB,EAC1E,CAAC,MAAM,EAAE,EAAE,CACT,SAAS,uBAAuB,CAAY,MAA0B;IACpE,MAAM,CAAC,IAAI,CAAC,CAAC;IACb,IAAI,CAAC,OAAO,GAAG,MAAM;QACnB,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM;EACxB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;QAC9D,CAAC,CAAC,EAAE,CAAC;IACP,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;IAClC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACvB,CAAC,CACJ,CAAC","sourcesContent":["import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n"]}