{"version":3,"file":"throwUnobservableError.js","sourceRoot":"","sources":["../../../../../../bak_node_modules/rxjs/src/internal/util/throwUnobservableError.ts"],"names":[],"mappings":";;;AAAA;;;GAGG;AACH,SAAgB,gCAAgC,CAAC,KAAU;IACzD,yFAAyF;IACzF,OAAO,IAAI,SAAS,CAClB,gBACE,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,KAAK,GAC/E,0HAA0H,CAC3H,CAAC;AACJ,CAAC;AAPD,4EAOC","sourcesContent":["/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n"]}