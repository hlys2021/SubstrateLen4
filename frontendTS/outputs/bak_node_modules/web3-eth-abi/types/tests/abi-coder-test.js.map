{"version":3,"file":"abi-coder-test.js","sourceRoot":"","sources":["../../../../../bak_node_modules/web3-eth-abi/types/tests/abi-coder-test.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE;AACF;;;;GAIG;;AAEH,+CAAwC;AAExC,MAAM,QAAQ,GAAG,IAAI,uBAAQ,EAAE,CAAC;AAEhC,qBAAqB;AACrB,QAAQ,CAAC,uBAAuB,CAAC,0BAA0B,CAAC,CAAC;AAC7D,qBAAqB;AACrB,QAAQ,CAAC,uBAAuB,CAAC;IAC7B,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE;QACJ;YACI,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,UAAU;SACnB;QACD;YACI,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,UAAU;SACnB;KACJ;CACJ,CAAC,CAAC;AAEH,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;AACtC,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC;AACrC,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;AACvC,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC7C,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;AACvC,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;AAC5C,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,0BAA0B,EAAE;IACzD,IAAI,EAAE,UAAU;CACnB,CAAC,CAAC;AAEH,qBAAqB;AACrB,QAAQ,CAAC,oBAAoB,CAAC,0BAA0B,CAAC,CAAC;AAC1D,qBAAqB;AACrB,QAAQ,CAAC,uBAAuB,CAAC;IAC7B,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,OAAO;IACb,MAAM,EAAE;QACJ;YACI,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,UAAU;SACnB;QACD;YACI,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,SAAS;SAClB;KACJ;CACJ,CAAC,CAAC;AAEH,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;AACtC,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC;AACrC,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;AACvC,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC7C,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;AACvC,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;AAC5C,eAAe;AACf,QAAQ,CAAC,uBAAuB,CAAC,0BAA0B,EAAE;IACzD,IAAI,EAAE,SAAS;CAClB,CAAC,CAAC;AAEH,qBAAqB;AACrB,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;AAClD,qBAAqB;AACrB,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC5D,qBAAqB;AACrB,QAAQ,CAAC,eAAe,CACpB;IACI,YAAY,EAAE;QACV,WAAW,EAAE,SAAS;QACtB,WAAW,EAAE,SAAS;QACtB,WAAW,EAAE;YACT,WAAW,EAAE,SAAS;YACtB,WAAW,EAAE,SAAS;SACzB;KACJ;CACJ,EACD;IACI,WAAW,EAAE,EAAE;IACf,WAAW,EAAE,EAAE;IACf,WAAW,EAAE;QACT,WAAW,EAAE,EAAE;QACf,WAAW,EAAE,EAAE;KAClB;CACJ,CACJ,CAAC;AAEF,qBAAqB;AACrB,QAAQ,CAAC,gBAAgB,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;AAC5E,qBAAqB;AACrB,QAAQ,CAAC,gBAAgB,CACrB,CAAC,SAAS,EAAE,SAAS,CAAC,EACtB,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,aAAa,CAAC,CACjC,CAAC;AACF,qBAAqB;AACrB,QAAQ,CAAC,gBAAgB,CACrB;IACI,SAAS;IACT;QACI,YAAY,EAAE;YACV,WAAW,EAAE,SAAS;YACtB,WAAW,EAAE,SAAS;YACtB,WAAW,EAAE;gBACT,WAAW,EAAE,SAAS;gBACtB,WAAW,EAAE,SAAS;aACzB;SACJ;KACJ;CACJ,EACD;IACI,CAAC,IAAI,EAAE,KAAK,CAAC;IACb;QACI,WAAW,EAAE,IAAI;QACjB,WAAW,EAAE,IAAI;QACjB,WAAW,EAAE;YACT,WAAW,EAAE,IAAI;YACjB,WAAW,EAAE,IAAI;SACpB;KACJ;CACJ,CACJ,CAAC;AAEF,eAAe;AACf,QAAQ,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;AAC1D,eAAe;AACf,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;AAC3D,eAAe;AACf,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;AAC3D,eAAe;AACf,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;AAEhE,qBAAqB;AACrB,QAAQ,CAAC,kBAAkB,CACvB;IACI,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE;QACJ;YACI,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,UAAU;SACnB;QACD;YACI,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,UAAU;SACnB;KACJ;CACJ,EACD,CAAC,YAAY,EAAE,SAAS,CAAC,CAC5B,CAAC;AAEF,eAAe;AACf,QAAQ,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;AAC9D,eAAe;AACf,QAAQ,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;AACnE,eAAe;AACf,QAAQ,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;AAC5D,eAAe;AACf,QAAQ,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;AAC7D,eAAe;AACf,QAAQ,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;AAC7D,eAAe;AACf,QAAQ,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;AAElE,QAAQ,CAAC,kBAAkB,CACvB;IACI,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE;QACJ;YACI,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,UAAU;SACnB;QACD;YACI,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,UAAU;SACnB;KACJ;CACJ;AACD,eAAe;AACf,GAAG,CACN,CAAC;AAEF,QAAQ,CAAC,kBAAkB,CACvB;IACI,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE;QACJ;YACI,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,UAAU;SACnB;QACD;YACI,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,UAAU;SACnB;KACJ;CACJ;AACD,eAAe;AACf,CAAC,GAAG,CAAC,CACR,CAAC;AAEF,QAAQ,CAAC,kBAAkB,CACvB;IACI,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE;QACJ;YACI,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,UAAU;SACnB;QACD;YACI,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,UAAU;SACnB;KACJ;CACJ;AACD,eAAe;AACf,IAAI,CACP,CAAC;AAEF,QAAQ,CAAC,kBAAkB,CACvB;IACI,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE;QACJ;YACI,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,UAAU;SACnB;QACD;YACI,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,UAAU;SACnB;KACJ;CACJ;AACD,eAAe;AACf,IAAI,CACP,CAAC;AAEF,QAAQ,CAAC,kBAAkB,CACvB;IACI,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,UAAU;IAChB,MAAM,EAAE;QACJ;YACI,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,UAAU;SACnB;QACD;YACI,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,UAAU;SACnB;KACJ;CACJ;AACD,eAAe;AACf,SAAS,CACZ,CAAC;AAEF,sCAAsC;AACtC,QAAQ,CAAC,eAAe,CACpB,SAAS,EACT,oEAAoE,CACvE,CAAC;AACF,sCAAsC;AACtC,QAAQ,CAAC,eAAe,CACpB,SAAS,EACT,oEAAoE,CACvE,CAAC;AACF,sCAAsC;AACtC,QAAQ,CAAC,eAAe,CACpB,SAAS,EACT,oEAAoE,CACvE,CAAC;AACF,sCAAsC;AACtC,QAAQ,CAAC,eAAe,CACpB;IACI,YAAY,EAAE;QACV,WAAW,EAAE,SAAS;QACtB,WAAW,EAAE,SAAS;QACtB,WAAW,EAAE;YACT,WAAW,EAAE,SAAS;YACtB,WAAW,EAAE,SAAS;SACzB;KACJ;CACJ,EACD;;+BAE2B,CAC9B,CAAC;AAEF,sCAAsC;AACtC,QAAQ,CAAC,eAAe,CACpB,QAAQ,EACR,oMAAoM,CACvM,CAAC;AAEF,eAAe;AACf,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3C,eAAe;AACf,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AAChD,eAAe;AACf,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AACzC,eAAe;AACf,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC1C,eAAe;AACf,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC1C,eAAe;AACf,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AAE/C,sCAAsC;AACtC,QAAQ,CAAC,gBAAgB,CACrB,CAAC,QAAQ,EAAE,SAAS,CAAC,EACrB,oEAAoE,CACvE,CAAC;AACF,sCAAsC;AACtC,QAAQ,CAAC,gBAAgB,CACrB;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;KACnB;CACJ,EACD,oEAAoE,CACvE,CAAC;AACF,sCAAsC;AACtC,QAAQ,CAAC,gBAAgB,CACrB;IACI,SAAS;IACT;QACI,YAAY,EAAE;YACV,WAAW,EAAE,SAAS;YACtB,WAAW,EAAE,SAAS;YACtB,WAAW,EAAE;gBACT,WAAW,EAAE,SAAS;gBACtB,WAAW,EAAE,SAAS;aACzB;SACJ;KACJ;CACJ,EACD,oEAAoE,CACvE,CAAC;AAEF,QAAQ,CAAC,gBAAgB;AACrB,eAAe;AACf,SAAS,EACT,oEAAoE,CACvE,CAAC;AAEF,QAAQ,CAAC,gBAAgB;AACrB,eAAe;AACf,GAAG,EACH,oEAAoE,CACvE,CAAC;AAEF,QAAQ,CAAC,gBAAgB;AACrB,eAAe;AACf,IAAI,EACJ,oEAAoE,CACvE,CAAC;AAEF,QAAQ,CAAC,gBAAgB;AACrB,eAAe;AACf,IAAI,EACJ,oEAAoE,CACvE,CAAC;AAEF,QAAQ,CAAC,gBAAgB;AACrB,eAAe;AACf,SAAS,EACT,oEAAoE,CACvE,CAAC;AACF,eAAe;AACf,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;AACtD,eAAe;AACf,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC7D,eAAe;AACf,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACxD,eAAe;AACf,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;AACvD,eAAe;AACf,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC;AACvD,eAAe;AACf,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC;AAE5D,yCAAyC;AACzC,QAAQ,CAAC,SAAS,CACd;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,IAAI;KAChB;CACJ,EACD;;sCAEkC,EAClC;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS;AACd,eAAe;AACf,CAAC,QAAQ,CAAC,EACV;;sCAEkC,EAClC;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS;AACd,eAAe;AACf,CAAC,GAAG,CAAC,EACL;;sCAEkC,EAClC;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS;AACd,eAAe;AACf,IAAI,EACJ;;sCAEkC,EAClC;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS;AACd,eAAe;AACf,CAAC,SAAS,CAAC,EACX;;sCAEkC,EAClC;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS;AACd,eAAe;AACf,CAAC,IAAI,CAAC,EACN;;sCAEkC,EAClC;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS,CACd;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,IAAI;KAChB;CACJ;AACD,eAAe;AACf,GAAG,EACH;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS,CACd;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,IAAI;KAChB;CACJ;AACD,eAAe;AACf,CAAC,GAAG,CAAC,EACL;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS,CACd;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,IAAI;KAChB;CACJ;AACD,eAAe;AACf,CAAC,QAAQ,CAAC,EACV;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS,CACd;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,IAAI;KAChB;CACJ;AACD,eAAe;AACf,IAAI,EACJ;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS,CACd;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,IAAI;KAChB;CACJ;AACD,eAAe;AACf,IAAI,EACJ;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS,CACd;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,IAAI;KAChB;CACJ;AACD,eAAe;AACf,SAAS,EACT;IACI,oEAAoE;IACpE,oEAAoE;CACvE,CACJ,CAAC;AAEF,QAAQ,CAAC,SAAS,CACd;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,IAAI;KAChB;CACJ,EACD;;sCAEkC;AAClC,eAAe;AACf,GAAG,CACN,CAAC;AAEF,QAAQ,CAAC,SAAS,CACd;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,IAAI;KAChB;CACJ,EACD;;sCAEkC;AAClC,eAAe;AACf,CAAC,GAAG,CAAC,CACR,CAAC;AAEF,QAAQ,CAAC,SAAS,CACd;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,IAAI;KAChB;CACJ,EACD;;sCAEkC;AAClC,eAAe;AACf,IAAI,CACP,CAAC;AAEF,QAAQ,CAAC,SAAS,CACd;IACI;QACI,IAAI,EAAE,QAAQ;QACd,IAAI,EAAE,UAAU;KACnB;IACD;QACI,IAAI,EAAE,SAAS;QACf,IAAI,EAAE,UAAU;QAChB,OAAO,EAAE,IAAI;KAChB;IACD;QACI,IAAI,EAAE,OAAO;QACb,IAAI,EAAE,eAAe;QACrB,OAAO,EAAE,IAAI;KAChB;CACJ,EACD;;sCAEkC;AAClC,eAAe;AACf,SAAS,CACZ,CAAC","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file abi-coder-test.ts\n * @author Josh Stevens <joshstevens19@hotmail.co.uk>\n * @date 2018\n */\n\nimport { AbiCoder } from 'web3-eth-abi';\n\nconst abiCoder = new AbiCoder();\n\n// $ExpectType string\nabiCoder.encodeFunctionSignature('myMethod(uint256,string)');\n// $ExpectType string\nabiCoder.encodeFunctionSignature({\n    name: 'myMethod',\n    type: 'function',\n    inputs: [\n        {\n            type: 'uint256',\n            name: 'myNumber'\n        },\n        {\n            type: 'string',\n            name: 'myString'\n        }\n    ]\n});\n\n// $ExpectError\nabiCoder.encodeFunctionSignature(345);\n// $ExpectError\nabiCoder.encodeFunctionSignature({});\n// $ExpectError\nabiCoder.encodeFunctionSignature(true);\n// $ExpectError\nabiCoder.encodeFunctionSignature(['string']);\n// $ExpectError\nabiCoder.encodeFunctionSignature([4]);\n// $ExpectError\nabiCoder.encodeFunctionSignature(null);\n// $ExpectError\nabiCoder.encodeFunctionSignature(undefined);\n// $ExpectError\nabiCoder.encodeFunctionSignature('myMethod(uint256,string)', {\n    name: 'myMethod'\n});\n\n// $ExpectType string\nabiCoder.encodeEventSignature('myEvent(uint256,bytes32)');\n// $ExpectType string\nabiCoder.encodeFunctionSignature({\n    name: 'myEvent',\n    type: 'event',\n    inputs: [\n        {\n            type: 'uint256',\n            name: 'myNumber'\n        },\n        {\n            type: 'bytes32',\n            name: 'myBytes'\n        }\n    ]\n});\n\n// $ExpectError\nabiCoder.encodeFunctionSignature(345);\n// $ExpectError\nabiCoder.encodeFunctionSignature({});\n// $ExpectError\nabiCoder.encodeFunctionSignature(true);\n// $ExpectError\nabiCoder.encodeFunctionSignature(['string']);\n// $ExpectError\nabiCoder.encodeFunctionSignature([4]);\n// $ExpectError\nabiCoder.encodeFunctionSignature(null);\n// $ExpectError\nabiCoder.encodeFunctionSignature(undefined);\n// $ExpectError\nabiCoder.encodeFunctionSignature('myEvent(uint256,bytes32)', {\n    name: 'myEvent'\n});\n\n// $ExpectType string\nabiCoder.encodeParameter('uint256', '2345675643');\n// $ExpectType string\nabiCoder.encodeParameter('uint256', ['0xdf3234', '0xfdfd']);\n// $ExpectType string\nabiCoder.encodeParameter(\n    {\n        ParentStruct: {\n            propertyOne: 'uint256',\n            propertyTwo: 'uint256',\n            childStruct: {\n                propertyOne: 'uint256',\n                propertyTwo: 'uint256'\n            }\n        }\n    },\n    {\n        propertyOne: 42,\n        propertyTwo: 56,\n        childStruct: {\n            propertyOne: 45,\n            propertyTwo: 78\n        }\n    }\n);\n\n// $ExpectType string\nabiCoder.encodeParameters(['uint256', 'string'], ['2345675643', 'Hello!%']);\n// $ExpectType string\nabiCoder.encodeParameters(\n    ['uint8[]', 'bytes32'],\n    [['34', '434'], '0x324567fff']\n);\n// $ExpectType string\nabiCoder.encodeParameters(\n    [\n        'uint8[]',\n        {\n            ParentStruct: {\n                propertyOne: 'uint256',\n                propertyTwo: 'uint256',\n                ChildStruct: {\n                    propertyOne: 'uint256',\n                    propertyTwo: 'uint256'\n                }\n            }\n        }\n    ],\n    [\n        ['34', '434'],\n        {\n            propertyOne: '42',\n            propertyTwo: '56',\n            ChildStruct: {\n                propertyOne: '45',\n                propertyTwo: '78'\n            }\n        }\n    ]\n);\n\n// $ExpectError\nabiCoder.encodeParameters(345, ['2345675643', 'Hello!%']);\n// $ExpectError\nabiCoder.encodeParameters(true, ['2345675643', 'Hello!%']);\n// $ExpectError\nabiCoder.encodeParameters(null, ['2345675643', 'Hello!%']);\n// $ExpectError\nabiCoder.encodeParameters(undefined, ['2345675643', 'Hello!%']);\n\n// $ExpectType string\nabiCoder.encodeFunctionCall(\n    {\n        name: 'myMethod',\n        type: 'function',\n        inputs: [\n            {\n                type: 'uint256',\n                name: 'myNumber'\n            },\n            {\n                type: 'string',\n                name: 'myString'\n            }\n        ]\n    },\n    ['2345675643', 'Hello!%']\n);\n\n// $ExpectError\nabiCoder.encodeFunctionCall([345], ['2345675643', 'Hello!%']);\n// $ExpectError\nabiCoder.encodeFunctionCall(['string'], ['2345675643', 'Hello!%']);\n// $ExpectError\nabiCoder.encodeFunctionCall(345, ['2345675643', 'Hello!%']);\n// $ExpectError\nabiCoder.encodeFunctionCall(true, ['2345675643', 'Hello!%']);\n// $ExpectError\nabiCoder.encodeFunctionCall(null, ['2345675643', 'Hello!%']);\n// $ExpectError\nabiCoder.encodeFunctionCall(undefined, ['2345675643', 'Hello!%']);\n\nabiCoder.encodeFunctionCall(\n    {\n        name: 'myMethod',\n        type: 'function',\n        inputs: [\n            {\n                type: 'uint256',\n                name: 'myNumber'\n            },\n            {\n                type: 'string',\n                name: 'myString'\n            }\n        ]\n    },\n    // $ExpectError\n    345\n);\n\nabiCoder.encodeFunctionCall(\n    {\n        name: 'myMethod',\n        type: 'function',\n        inputs: [\n            {\n                type: 'uint256',\n                name: 'myNumber'\n            },\n            {\n                type: 'string',\n                name: 'myString'\n            }\n        ]\n    },\n    // $ExpectError\n    [345]\n);\n\nabiCoder.encodeFunctionCall(\n    {\n        name: 'myMethod',\n        type: 'function',\n        inputs: [\n            {\n                type: 'uint256',\n                name: 'myNumber'\n            },\n            {\n                type: 'string',\n                name: 'myString'\n            }\n        ]\n    },\n    // $ExpectError\n    true\n);\n\nabiCoder.encodeFunctionCall(\n    {\n        name: 'myMethod',\n        type: 'function',\n        inputs: [\n            {\n                type: 'uint256',\n                name: 'myNumber'\n            },\n            {\n                type: 'string',\n                name: 'myString'\n            }\n        ]\n    },\n    // $ExpectError\n    null\n);\n\nabiCoder.encodeFunctionCall(\n    {\n        name: 'myMethod',\n        type: 'function',\n        inputs: [\n            {\n                type: 'uint256',\n                name: 'myNumber'\n            },\n            {\n                type: 'string',\n                name: 'myString'\n            }\n        ]\n    },\n    // $ExpectError\n    undefined\n);\n\n// $ExpectType { [key: string]: any; }\nabiCoder.decodeParameter(\n    'uint256',\n    '0x0000000000000000000000000000000000000000000000000000000000000010'\n);\n// $ExpectType { [key: string]: any; }\nabiCoder.decodeParameter(\n    'uint256',\n    '0x0000000000000000000000000000000000000000000000000000000000000010'\n);\n// $ExpectType { [key: string]: any; }\nabiCoder.decodeParameter(\n    'uint256',\n    '0x0000000000000000000000000000000000000000000000000000000000000010'\n);\n// $ExpectType { [key: string]: any; }\nabiCoder.decodeParameter(\n    {\n        ParentStruct: {\n            propertyOne: 'uint256',\n            propertyTwo: 'uint256',\n            childStruct: {\n                propertyOne: 'uint256',\n                propertyTwo: 'uint256'\n            }\n        }\n    },\n    `0x000000000000000000000000000000000000000000000000000000000000002a00000000000000000000000000000000000000000000000000\n    00000000000038000000000000000000000000000000000000000000000000000000000000002d00000000000000000000000000000000000000\n    0000000000000000000000004e`\n);\n\n// $ExpectType { [key: string]: any; }\nabiCoder.decodeParameter(\n    'string',\n    '0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000023078000000000000000000000000000000000000000000000000000000000000'\n);\n\n// $ExpectError\nabiCoder.decodeParameter('uint256', [345]);\n// $ExpectError\nabiCoder.decodeParameter('uint256', ['string']);\n// $ExpectError\nabiCoder.decodeParameter('uint256', 345);\n// $ExpectError\nabiCoder.decodeParameter('uint256', true);\n// $ExpectError\nabiCoder.decodeParameter('uint256', null);\n// $ExpectError\nabiCoder.decodeParameter('uint256', undefined);\n\n// $ExpectType { [key: string]: any; }\nabiCoder.decodeParameters(\n    ['string', 'uint256'],\n    '0x0000000000000000000000000000000000000000000000000000000000000010'\n);\n// $ExpectType { [key: string]: any; }\nabiCoder.decodeParameters(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber'\n        }\n    ],\n    '0x0000000000000000000000000000000000000000000000000000000000000010'\n);\n// $ExpectType { [key: string]: any; }\nabiCoder.decodeParameters(\n    [\n        'uint8[]',\n        {\n            ParentStruct: {\n                propertyOne: 'uint256',\n                propertyTwo: 'uint256',\n                childStruct: {\n                    propertyOne: 'uint256',\n                    propertyTwo: 'uint256'\n                }\n            }\n        }\n    ],\n    '0x0000000000000000000000000000000000000000000000000000000000000010'\n);\n\nabiCoder.decodeParameters(\n    // $ExpectError\n    'uint256',\n    '0x0000000000000000000000000000000000000000000000000000000000000010'\n);\n\nabiCoder.decodeParameters(\n    // $ExpectError\n    453,\n    '0x0000000000000000000000000000000000000000000000000000000000000010'\n);\n\nabiCoder.decodeParameters(\n    // $ExpectError\n    true,\n    '0x0000000000000000000000000000000000000000000000000000000000000010'\n);\n\nabiCoder.decodeParameters(\n    // $ExpectError\n    null,\n    '0x0000000000000000000000000000000000000000000000000000000000000010'\n);\n\nabiCoder.decodeParameters(\n    // $ExpectError\n    undefined,\n    '0x0000000000000000000000000000000000000000000000000000000000000010'\n);\n// $ExpectError\nabiCoder.decodeParameters(['string', 'uint256'], 345);\n// $ExpectError\nabiCoder.decodeParameters(['string', 'uint256'], ['string']);\n// $ExpectError\nabiCoder.decodeParameters(['string', 'uint256'], [345]);\n// $ExpectError\nabiCoder.decodeParameters(['string', 'uint256'], true);\n// $ExpectError\nabiCoder.decodeParameters(['string', 'uint256'], null);\n// $ExpectError\nabiCoder.decodeParameters(['string', 'uint256'], undefined);\n\n// $ExpectType { [key: string]: string; }\nabiCoder.decodeLog(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber',\n            indexed: true\n        },\n        {\n            type: 'uint8',\n            name: 'mySmallNumber',\n            indexed: true\n        }\n    ],\n    `0x0000000000000000000000000000000000000000000000000000000000000020000000000000000\n     000000000000000000000000000000000000000000000000748656c6c6f2521000000000000000000\n     00000000000000000000000000000000`,\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    // $ExpectError\n    ['string'],\n    `0x0000000000000000000000000000000000000000000000000000000000000020000000000000000\n     000000000000000000000000000000000000000000000000748656c6c6f2521000000000000000000\n     00000000000000000000000000000000`,\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    // $ExpectError\n    [345],\n    `0x0000000000000000000000000000000000000000000000000000000000000020000000000000000\n     000000000000000000000000000000000000000000000000748656c6c6f2521000000000000000000\n     00000000000000000000000000000000`,\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    // $ExpectError\n    true,\n    `0x0000000000000000000000000000000000000000000000000000000000000020000000000000000\n     000000000000000000000000000000000000000000000000748656c6c6f2521000000000000000000\n     00000000000000000000000000000000`,\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    // $ExpectError\n    [undefined],\n    `0x0000000000000000000000000000000000000000000000000000000000000020000000000000000\n     000000000000000000000000000000000000000000000000748656c6c6f2521000000000000000000\n     00000000000000000000000000000000`,\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    // $ExpectError\n    [null],\n    `0x0000000000000000000000000000000000000000000000000000000000000020000000000000000\n     000000000000000000000000000000000000000000000000748656c6c6f2521000000000000000000\n     00000000000000000000000000000000`,\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber',\n            indexed: true\n        },\n        {\n            type: 'uint8',\n            name: 'mySmallNumber',\n            indexed: true\n        }\n    ],\n    // $ExpectError\n    345,\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber',\n            indexed: true\n        },\n        {\n            type: 'uint8',\n            name: 'mySmallNumber',\n            indexed: true\n        }\n    ],\n    // $ExpectError\n    [345],\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber',\n            indexed: true\n        },\n        {\n            type: 'uint8',\n            name: 'mySmallNumber',\n            indexed: true\n        }\n    ],\n    // $ExpectError\n    ['string'],\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber',\n            indexed: true\n        },\n        {\n            type: 'uint8',\n            name: 'mySmallNumber',\n            indexed: true\n        }\n    ],\n    // $ExpectError\n    true,\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber',\n            indexed: true\n        },\n        {\n            type: 'uint8',\n            name: 'mySmallNumber',\n            indexed: true\n        }\n    ],\n    // $ExpectError\n    null,\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber',\n            indexed: true\n        },\n        {\n            type: 'uint8',\n            name: 'mySmallNumber',\n            indexed: true\n        }\n    ],\n    // $ExpectError\n    undefined,\n    [\n        '0x000000000000000000000000000000000000000000000000000000000000f310',\n        '0x0000000000000000000000000000000000000000000000000000000000000010'\n    ]\n);\n\nabiCoder.decodeLog(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber',\n            indexed: true\n        },\n        {\n            type: 'uint8',\n            name: 'mySmallNumber',\n            indexed: true\n        }\n    ],\n    `0x0000000000000000000000000000000000000000000000000000000000000020000000000000000\n     000000000000000000000000000000000000000000000000748656c6c6f2521000000000000000000\n     00000000000000000000000000000000`,\n    // $ExpectError\n    345\n);\n\nabiCoder.decodeLog(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber',\n            indexed: true\n        },\n        {\n            type: 'uint8',\n            name: 'mySmallNumber',\n            indexed: true\n        }\n    ],\n    `0x0000000000000000000000000000000000000000000000000000000000000020000000000000000\n     000000000000000000000000000000000000000000000000748656c6c6f2521000000000000000000\n     00000000000000000000000000000000`,\n    // $ExpectError\n    [345]\n);\n\nabiCoder.decodeLog(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber',\n            indexed: true\n        },\n        {\n            type: 'uint8',\n            name: 'mySmallNumber',\n            indexed: true\n        }\n    ],\n    `0x0000000000000000000000000000000000000000000000000000000000000020000000000000000\n     000000000000000000000000000000000000000000000000748656c6c6f2521000000000000000000\n     00000000000000000000000000000000`,\n    // $ExpectError\n    null\n);\n\nabiCoder.decodeLog(\n    [\n        {\n            type: 'string',\n            name: 'myString'\n        },\n        {\n            type: 'uint256',\n            name: 'myNumber',\n            indexed: true\n        },\n        {\n            type: 'uint8',\n            name: 'mySmallNumber',\n            indexed: true\n        }\n    ],\n    `0x0000000000000000000000000000000000000000000000000000000000000020000000000000000\n     000000000000000000000000000000000000000000000000748656c6c6f2521000000000000000000\n     00000000000000000000000000000000`,\n    // $ExpectError\n    undefined\n);\n"]}