{"version":3,"file":"personal-tests.js","sourceRoot":"","sources":["../../../../../bak_node_modules/web3-eth-personal/types/tests/personal-tests.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file personal-tests.ts\n * @author Huan Zhang <huanzhang30@gmail.com>\n * @author Samuel Furter <samuel@ethereum.org>\n * @author Josh Stevens <joshstevens19@hotmail.co.uk>\n * @date 2018\n */\n\nimport { RLPEncodedTransaction } from 'web3-core';\nimport PersonalDefault, { Personal } from 'web3-eth-personal';\n\n// $ExpectType Personal\nconst personal_default_empty = new PersonalDefault();\n\n// $ExpectType Personal\nconst personal_empty = new Personal();\n\n// $ExpectType Personal\nconst personal = new Personal('http://localhost:7545');\n\n// $ExpectType string | null\npersonal.defaultAccount;\n\n// $ExpectType string | number\npersonal.defaultBlock;\n\n// $ExpectType provider\npersonal.currentProvider;\n\n// $ExpectType any\nPersonal.givenProvider;\n\n// $ExpectType any\npersonal.givenProvider;\n\n// $ExpectType boolean\npersonal.setProvider('https://localhost:2100');\n\n// $ExpectType BatchRequest\nnew personal.BatchRequest();\n\n// $ExpectType any\npersonal.extend({property: 'test', methods: [{name: 'method', call: 'method'}]});\n\n// $ExpectType Promise<string>\npersonal.newAccount('test password');\n// $ExpectType Promise<string>\npersonal.newAccount('test password', (error: Error, address: string) => {});\n\n// $ExpectType Promise<string>\npersonal.sign(\n    'Hello world',\n    '0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe',\n    'test password!'\n);\n// $ExpectType Promise<string>\npersonal.sign(\n    'Hello world',\n    '0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe',\n    'test password!',\n    (error: Error, signature: string) => {}\n);\n\n// $ExpectType Promise<string>\npersonal.ecRecover('Hello world', '0x30755ed65396facf86c53e6217c52b4daebe72aa');\n// $ExpectType Promise<string>\npersonal.ecRecover(\n    'Hello world',\n    '0x30755ed65396facf86c53e6217c52b4daebe72aa',\n    (error: Error, address: string) => {}\n);\n\n// $ExpectType Promise<RLPEncodedTransaction>\npersonal.signTransaction(\n    {\n        from: '0xEB014f8c8B418Db6b45774c326A0E64C78914dC0',\n        gasPrice: '20000000000',\n        gas: '21000',\n        to: '0x3535353535353535353535353535353535353535',\n        value: '1000000000000000000',\n        data: ''\n    },\n    'test password'\n);\n// $ExpectType Promise<RLPEncodedTransaction>\npersonal.signTransaction(\n    {\n        from: '0xEB014f8c8B418Db6b45774c326A0E64C78914dC0',\n        gasPrice: '20000000000',\n        gas: '21000',\n        to: '0x3535353535353535353535353535353535353535',\n        value: '1000000000000000000',\n        data: ''\n    },\n    'test password',\n    (error: Error, RLPEncodedTransaction: RLPEncodedTransaction) => {}\n);\n\n// $ExpectType Promise<string>\npersonal.sendTransaction(\n    {\n        from: '0xEB014f8c8B418Db6b45774c326A0E64C78914dC0',\n        gasPrice: '20000000000',\n        gas: '21000',\n        to: '0x3535353535353535353535353535353535353535',\n        value: '1000000000000000000',\n        data: ''\n    },\n    'test password'\n);\n\n// $ExpectType Promise<string>\npersonal.sendTransaction(\n    {\n        from: '0xEB014f8c8B418Db6b45774c326A0E64C78914dC0',\n        gasPrice: '20000000000',\n        gas: '21000',\n        to: '0x3535353535353535353535353535353535353535',\n        value: '1000000000000000000',\n        data: ''\n    },\n    'test password',\n    (error: Error, transactionHash: string) => {}\n);\n\n// $ExpectType Promise<boolean>\npersonal.unlockAccount(\n    '0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe',\n    'test password!',\n    600\n);\n// $ExpectType Promise<boolean>\npersonal.unlockAccount(\n    '0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe',\n    'test password!',\n    600,\n    (error: Error) => {}\n);\n\n// $ExpectType Promise<boolean>\npersonal.lockAccount('0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe');\n// $ExpectType Promise<boolean>\npersonal.lockAccount(\n    '0x11f4d0A3c12e86B4b5F39B213F7E19D048276DAe',\n    (error: Error, sucess: boolean) => {}\n);\n\n// $ExpectType Promise<string[]>\npersonal.getAccounts();\n// $ExpectType Promise<string[]>\npersonal.getAccounts((error: Error, accounts: string[]) => {});\n\n// $ExpectType Promise<string>\npersonal.importRawKey('privateKey', 'blah2');\n"]}