{"version":3,"file":"formatters-test.js","sourceRoot":"","sources":["../../../../../bak_node_modules/web3-core-helpers/types/tests/formatters-test.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;EAYE;AACF;;;;GAIG;;AAEH,yDAA+C;AAE/C,qBAAqB;AACrB,8BAAU,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC;AAEzC,qBAAqB;AACrB,8BAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;AAErC,qBAAqB;AACrB,8BAAU,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;AAExC,sBAAsB;AACtB,8BAAU,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;AAE7C,8BAA8B;AAC9B,8BAAU,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;AAE5C,kBAAkB;AAClB,8BAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;AAEpC,kBAAkB;AAClB,8BAAU,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;AAEhC,kBAAkB;AAClB,8BAAU,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;AAElC,kBAAkB;AAClB,8BAAU,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC;AAEzC,kBAAkB;AAClB,8BAAU,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC;AAE1C,kBAAkB;AAClB,8BAAU,CAAC,iCAAiC,CAAC,EAAE,CAAC,CAAC;AAEjD,kBAAkB;AAClB,8BAAU,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;AAEjC,kBAAkB;AAClB,8BAAU,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;AAElC,kBAAkB;AAClB,8BAAU,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;AAElC,kBAAkB;AAClB,8BAAU,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;AAEnC,kBAAkB;AAClB,8BAAU,CAAC,sBAAsB,CAAC,EAAE,CAAC,CAAC","sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file formatters-test.ts\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nimport { formatters } from 'web3-core-helpers';\n\n// $ExpectType number\nformatters.outputBigNumberFormatter(100);\n\n// $ExpectType string\nformatters.inputSignFormatter('0x0');\n\n// $ExpectType string\nformatters.inputAddressFormatter('0x0');\n\n// $ExpectType boolean\nformatters.isPredefinedBlockNumber('latest');\n\n// $ExpectType string | number\nformatters.inputBlockNumberFormatter('0x0');\n\n// $ExpectType any\nformatters.outputBlockFormatter({});\n\n// $ExpectType any\nformatters.txInputFormatter({});\n\n// $ExpectType any\nformatters.inputCallFormatter({});\n\n// $ExpectType any\nformatters.inputTransactionFormatter({});\n\n// $ExpectType any\nformatters.outputTransactionFormatter({});\n\n// $ExpectType any\nformatters.outputTransactionReceiptFormatter({});\n\n// $ExpectType any\nformatters.inputLogFormatter({});\n\n// $ExpectType any\nformatters.outputLogFormatter({});\n\n// $ExpectType any\nformatters.inputPostFormatter({});\n\n// $ExpectType any\nformatters.outputPostFormatter({});\n\n// $ExpectType any\nformatters.outputSyncingFormatter({});\n"]}