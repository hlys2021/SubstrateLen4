{"version":3,"file":"message.js","sourceRoot":"","sources":["../../../../../bak_node_modules/@ethersproject/hash/src.ts/message.ts"],"names":[],"mappings":";;;AAAA,gDAAqD;AACrD,wDAAqD;AACrD,oDAAqD;AAExC,QAAA,aAAa,GAAG,gCAAgC,CAAC;AAE9D,SAAgB,WAAW,CAAC,OAAuB;IAC/C,IAAI,OAAM,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;QAAE,OAAO,GAAG,IAAA,qBAAW,EAAC,OAAO,CAAC,CAAC;KAAE;IACrE,OAAO,IAAA,qBAAS,EAAC,IAAA,cAAM,EAAC;QACpB,IAAA,qBAAW,EAAC,qBAAa,CAAC;QAC1B,IAAA,qBAAW,EAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACnC,OAAO;KACV,CAAC,CAAC,CAAC;AACR,CAAC;AAPD,kCAOC","sourcesContent":["import { Bytes, concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n\nexport function hashMessage(message: Bytes | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n"]}