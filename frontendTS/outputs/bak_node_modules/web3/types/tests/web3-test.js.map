{"version":3,"file":"web3-test.js","sourceRoot":"","sources":["../../../../../bak_node_modules/web3/types/tests/web3-test.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;EAYE;AACF;;;;GAIG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,gDAAwB;AACxB,yCAA2B;AAI3B,oBAAoB;AACpB,cAAI,CAAC,KAAK,CAAC;AAEX,qBAAqB;AACrB,cAAI,CAAC,OAAO,CAAC;AAEb,sBAAsB;AACtB,cAAI,CAAC,OAAO,CAAC;AAEb,wBAAwB;AACxB,cAAI,CAAC,SAAS,CAAC;AAEf,kBAAkB;AAClB,cAAI,CAAC,aAAa,CAAC;AAEnB,mBAAmB;AACnB,MAAM,UAAU,GAAG,IAAI,cAAI,EAAE,CAAC;AAE9B,mBAAmB;AACnB,IAAI,IAAI,GAAG,IAAI,cAAI,CAAC,yBAAyB,CAAC,CAAC;AAE/C,uBAAuB;AACvB,IAAI,CAAC,eAAe,CAAC;AAErB,kBAAkB;AAClB,IAAI,CAAC,MAAM,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC,EAAC,CAAC,CAAC;AAE7E,kBAAkB;AAClB,IAAI,CAAC,aAAa,CAAC;AAEnB,4BAA4B;AAC5B,IAAI,CAAC,cAAc,CAAC;AAEpB,8BAA8B;AAC9B,IAAI,CAAC,YAAY,CAAC;AAElB,sBAAsB;AACtB,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC;AAE3C,2BAA2B;AAC3B,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;AAExB,oBAAoB;AACpB,IAAI,CAAC,KAAK,CAAC;AAEX,qBAAqB;AACrB,IAAI,CAAC,OAAO,CAAC;AAEb,kBAAkB;AAClB,IAAI,CAAC,GAAG,CAAC;AAET,kBAAkB;AAClB,IAAI,CAAC,GAAG,CAAC;AAET,kBAAkB;AAClB,IAAI,CAAC,GAAG,CAAC;AAET,qBAAqB;AACrB,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,CAAC;AAEnC,mBAAmB;AACnB,IAAI,GAAG,IAAI,cAAI,CAAC,yBAAyB,EAAE,SAAS,CAAC,CAAC;AAEtD,mBAAmB;AACnB,IAAI,GAAG,IAAI,cAAI,EAAE,CAAC;AAElB,MAAM,eAAe;IACjB,SAAS,CAAC,OAAuB,EAAE,QAAiE,IAAG,CAAC;CAC3G;AAED,mBAAmB;AACnB,IAAI,GAAG,IAAI,cAAI,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;AAEvC,MAAM,eAAe;IACjB,IAAI,CAAC,OAAuB,EAAE,QAAiE,IAAG,CAAC;IACnG,SAAS,CAAC,OAAuB,EAAE,QAAiE,IAAG,CAAC;CAC3G;AAED,mBAAmB;AACnB,IAAI,GAAG,IAAI,cAAI,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;AAEvC,MAAM,eAAe;IACX,OAAO,CAAC,IAAsB;8DAAG,CAAC;KAAA;IACxC,SAAS,CAAC,OAAuB,EAAE,QAAiE,IAAG,CAAC;CAC3G;AAED,mBAAmB;AACnB,IAAI,GAAG,IAAI,cAAI,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC","sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file web3-test.ts\n * @author Josh Stevens <joshstevens19@hotmail.co.uk>, Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nimport Web3 from 'web3';\nimport * as net from 'net';\nimport { AbstractProvider, RequestArguments } from 'web3-core';\nimport { JsonRpcPayload, JsonRpcResponse } from 'web3-core-helpers';\n\n// $ExpectType Utils\nWeb3.utils;\n\n// $ExpectType string\nWeb3.version;\n\n// $ExpectType Modules\nWeb3.modules;\n\n// $ExpectType Providers\nWeb3.providers;\n\n// $ExpectType any\nWeb3.givenProvider;\n\n// $ExpectType Web3\nconst web3_empty = new Web3();\n\n// $ExpectType Web3\nlet web3 = new Web3('https://localhost:5000/');\n\n// $ExpectType provider\nweb3.currentProvider;\n\n// $ExpectType any\nweb3.extend({property: 'test', methods: [{name: 'method', call: 'method'}]});\n\n// $ExpectType any\nweb3.givenProvider;\n\n// $ExpectType string | null\nweb3.defaultAccount;\n\n// $ExpectType string | number\nweb3.defaultBlock;\n\n// $ExpectType boolean\nweb3.setProvider('https://localhost:2100');\n\n// $ExpectType BatchRequest\nnew web3.BatchRequest();\n\n// $ExpectType Utils\nweb3.utils;\n\n// $ExpectType string\nweb3.version;\n\n// $ExpectType Eth\nweb3.eth;\n\n// $ExpectType Shh\nweb3.shh;\n\n// $ExpectType Bzz\nweb3.bzz;\n\n// $ExpectType Socket\nconst netSocket = new net.Socket();\n\n// $ExpectType Web3\nweb3 = new Web3('https://localhost:5000/', netSocket);\n\n// $ExpectType Web3\nweb3 = new Web3();\n\nclass CustomProvider1 implements AbstractProvider {\n    sendAsync(payload: JsonRpcPayload, callback: (error: Error | null, result?: JsonRpcResponse) => void) {}\n}\n\n// $ExpectType Web3\nweb3 = new Web3(new CustomProvider1());\n\nclass CustomProvider2 implements AbstractProvider {\n    send(payload: JsonRpcPayload, callback: (error: Error | null, result?: JsonRpcResponse) => void) {}\n    sendAsync(payload: JsonRpcPayload, callback: (error: Error | null, result?: JsonRpcResponse) => void) {}\n}\n\n// $ExpectType Web3\nweb3 = new Web3(new CustomProvider2());\n\nclass CustomProvider3 implements AbstractProvider {\n    async request(args: RequestArguments) {}\n    sendAsync(payload: JsonRpcPayload, callback: (error: Error | null, result?: JsonRpcResponse) => void) {}\n}\n\n// $ExpectType Web3\nweb3 = new Web3(new CustomProvider3());\n"]}