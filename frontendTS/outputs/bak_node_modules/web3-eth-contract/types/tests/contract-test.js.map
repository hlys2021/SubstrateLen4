{"version":3,"file":"contract-test.js","sourceRoot":"","sources":["../../../../../bak_node_modules/web3-eth-contract/types/tests/contract-test.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file contract-tests.ts\n * @author Josh Stevens <joshstevens19@hotmail.co.uk>\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\nimport ContractDefault, { Contract } from 'web3-eth-contract';\n\n// $ExpectType Contract\nconst contract_default = new ContractDefault([]);\n\n// $ExpectType Contract\nconst contract = new Contract([]);\n\n// $ExpectType string | null\ncontract.defaultAccount;\n\n// $ExpectType BlockNumber\ncontract.defaultBlock;\n\n// $ExpectType Common\ncontract.defaultCommon;\n\n// $ExpectType hardfork\ncontract.defaultHardfork;\n\n// $ExpectType chain\ncontract.defaultChain;\n\n// $ExpectType number\ncontract.transactionPollingTimeout;\n\n// $ExpectType number\ncontract.transactionConfirmationBlocks;\n\n// $ExpectType number\ncontract.transactionBlockTimeout;\n\n// $ExpectType boolean\ncontract.handleRevert;\n\n// $ExpectType string\ncontract.options.address;\n\n// $ExpectType AbiItem[]\ncontract.options.jsonInterface;\n\n// $ExpectType string | undefined\ncontract.options.from;\n\n// $ExpectType number | undefined\ncontract.options.gas;\n\n// $ExpectType string | undefined\ncontract.options.gasPrice;\n\n// $ExpectType string | undefined\ncontract.options.data;\n\n// $ExpectType Contract\ncontract.clone();\n\n// $ExpectType ContractSendMethod\ncontract.deploy({\n    data: '0x12345...',\n    arguments: [123, 'My String']\n});\n\n// $ExpectType void\ncontract.once(\n    'MyEvent',\n    {\n        filter: {\n            myIndexedParam: [20, 23],\n            myOtherIndexedParam: '0x123456789...'\n        },\n        fromBlock: 0\n    },\n    (error, event) => {}\n);\n\n// $ExpectType void\ncontract.once('MyEvent', (error, event) => {});\n\n// $ExpectType Promise<EventData[]>\ncontract.getPastEvents('MyEvent');\n\n// $ExpectType Promise<EventData[]>\ncontract.getPastEvents('MyEvent', {\n    filter: { myIndexedParam: [20, 23], myOtherIndexedParam: '0x123456789...' },\n    fromBlock: 0,\n    toBlock: 'latest'\n});\n\n// $ExpectType Promise<EventData[]>\ncontract.getPastEvents('MyEvent', {});\n\n// $ExpectType Promise<EventData[]>\ncontract.getPastEvents(\n    'MyEvent',\n    {\n        filter: {\n            myIndexedParam: [20, 23],\n            myOtherIndexedParam: '0x123456789...'\n        },\n        fromBlock: 0,\n        toBlock: 'latest'\n    },\n    (error, events) => {}\n);\n\n// $ExpectType Promise<EventData[]>\ncontract.getPastEvents('MyEvent', (error, events) => {});\n\n// $ExpectType Promise<number>\ncontract\n    .deploy({\n        data: '0x12345...',\n        arguments: [123, 'My String']\n    })\n    .estimateGas();\n\n// $ExpectType Promise<number>\ncontract\n    .deploy({\n        data: '0x12345...',\n        arguments: [123, 'My String']\n    })\n    .estimateGas({ from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe' });\n\n// $ExpectType Promise<number>\ncontract\n    .deploy({\n        data: '0x12345...',\n        arguments: [123, 'My String']\n    })\n    .estimateGas((err: Error, gas: number) => {});\n\n// $ExpectType string\ncontract\n    .deploy({\n        data: '0x12345...',\n        arguments: [123, 'My String']\n    })\n    .encodeABI();\n\n// $ExpectType PromiEvent<Contract>\ncontract\n    .deploy({\n        data: '0x12345...',\n        arguments: [123, 'My String']\n    })\n    .send({ from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe' });\n\n// $ExpectType PromiEvent<Contract>\ncontract\n    .deploy({\n        data: '0x12345...',\n        arguments: [123, 'My String']\n    })\n    .send(\n        { from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe' },\n        (err: Error, transactionHash: string) => {}\n    );\n"]}