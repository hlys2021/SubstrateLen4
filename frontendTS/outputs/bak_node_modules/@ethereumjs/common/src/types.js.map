{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../bak_node_modules/@ethereumjs/common/src/types.ts"],"names":[],"mappings":"","sourcesContent":["import { BN } from 'ethereumjs-util'\nimport { ConsensusAlgorithm, ConsensusType, Hardfork as HardforkName } from '.'\n\nexport interface genesisStatesType {\n  names: {\n    [key: string]: string\n  }\n  [key: string]: {}\n}\n\nexport interface chainsType {\n  names: {\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport interface Chain {\n  name: string\n  chainId: number | BN\n  networkId: number | BN\n  // TODO: make mandatory in next breaking release\n  defaultHardfork?: string\n  comment: string\n  url: string\n  genesis: GenesisBlock\n  hardforks: Hardfork[]\n  bootstrapNodes: BootstrapNode[]\n  dnsNetworks?: string[]\n  // TODO: make mandatory in next breaking release\n  consensus?: {\n    type: ConsensusType | string\n    algorithm: ConsensusAlgorithm | string\n    clique?: {\n      period: number\n      epoch: number\n    }\n    ethash?: any\n    casper?: any\n  }\n}\n\nexport interface GenesisState {\n  [key: string]: string\n}\n\nexport interface eipsType {\n  [key: number]: any\n}\n\nexport interface GenesisBlock {\n  hash: string\n  timestamp: string | null\n  gasLimit: number\n  difficulty: number\n  nonce: string\n  extraData: string\n  stateRoot: string\n}\n\nexport interface Hardfork {\n  name: HardforkName | string\n  block: number | null\n  td?: number\n  forkHash?: string | null\n}\n\nexport interface BootstrapNode {\n  ip: string\n  port: number | string\n  network?: string\n  chainId?: number\n  id: string\n  location: string\n  comment: string\n}\n"]}