{"version":3,"file":"random.js","sourceRoot":"","sources":["../../../../bak_node_modules/ethereum-cryptography/src/random.ts"],"names":[],"mappings":";;;AAAA,MAAM,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAE3C,SAAgB,cAAc,CAAC,KAAa;IAC1C,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,WAAW,CAAC,KAAK,EAAE,UAAS,GAAQ,EAAE,IAAY;YAChD,IAAI,GAAG,EAAE;gBACP,MAAM,CAAC,GAAG,CAAC,CAAC;gBACZ,OAAO;aACR;YAED,OAAO,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAXD,wCAWC;AAED,SAAgB,kBAAkB,CAAC,KAAa;IAC9C,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC;AAC5B,CAAC;AAFD,gDAEC","sourcesContent":["const randombytes = require(\"randombytes\");\n\nexport function getRandomBytes(bytes: number): Promise<Buffer> {\n  return new Promise((resolve, reject) => {\n    randombytes(bytes, function(err: any, resp: Buffer) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(resp);\n    });\n  });\n}\n\nexport function getRandomBytesSync(bytes: number): Buffer {\n  return randombytes(bytes);\n}\n"]}