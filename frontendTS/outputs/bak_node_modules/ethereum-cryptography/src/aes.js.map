{"version":3,"file":"aes.js","sourceRoot":"","sources":["../../../../bak_node_modules/ethereum-cryptography/src/aes.ts"],"names":[],"mappings":";;;AAAA,MAAM,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAEhD,MAAM,eAAe,GAAG,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;AAEtE,SAAS,aAAa,CAAC,IAAY;IACjC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;QAC5B,MAAM,IAAI,KAAK,CAAC,sCAAsC,IAAI,EAAE,CAAC,CAAC;KAC/D;AACH,CAAC;AAED,SAAS,oBAAoB,CAAC,IAAY;IACxC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;QACnC,sCAAsC;QACtC,OAAO,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC;KAC5E;AACH,CAAC;AAED,SAAgB,OAAO,CACrB,GAAW,EACX,GAAW,EACX,EAAU,EACV,IAAI,GAAG,aAAa,EACpB,mBAAmB,GAAG,IAAI;IAE1B,aAAa,CAAC,IAAI,CAAC,CAAC;IAEpB,MAAM,MAAM,GAAG,aAAa,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3D,MAAM,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;IAE3C,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACrC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IAE7B,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3C,CAAC;AAhBD,0BAgBC;AAED,SAAgB,OAAO,CACrB,UAAkB,EAClB,GAAW,EACX,EAAU,EACV,IAAI,GAAG,aAAa,EACpB,mBAAmB,GAAG,IAAI;IAE1B,aAAa,CAAC,IAAI,CAAC,CAAC;IAEpB,MAAM,QAAQ,GAAG,aAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IAC/D,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;IAE7C,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC9C,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;IAE/B,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC3C,CAAC;AAhBD,0BAgBC","sourcesContent":["const browserifyAes = require(\"browserify-aes\");\n\nconst SUPPORTED_MODES = [\"aes-128-ctr\", \"aes-128-cbc\", \"aes-256-cbc\"];\n\nfunction ensureAesMode(mode: string) {\n  if (!mode.startsWith(\"aes-\")) {\n    throw new Error(`AES submodule doesn't support mode ${mode}`);\n  }\n}\n\nfunction warnIfUnsuportedMode(mode: string) {\n  if (!SUPPORTED_MODES.includes(mode)) {\n    // tslint:disable-next-line no-console\n    console.warn(\"Using an unsupported AES mode. Consider using aes-128-ctr.\");\n  }\n}\n\nexport function encrypt(\n  msg: Buffer,\n  key: Buffer,\n  iv: Buffer,\n  mode = \"aes-128-ctr\",\n  pkcs7PaddingEnabled = true\n): Buffer {\n  ensureAesMode(mode);\n\n  const cipher = browserifyAes.createCipheriv(mode, key, iv);\n  cipher.setAutoPadding(pkcs7PaddingEnabled);\n\n  const encrypted = cipher.update(msg);\n  const final = cipher.final();\n\n  return Buffer.concat([encrypted, final]);\n}\n\nexport function decrypt(\n  cypherText: Buffer,\n  key: Buffer,\n  iv: Buffer,\n  mode = \"aes-128-ctr\",\n  pkcs7PaddingEnabled = true\n): Buffer {\n  ensureAesMode(mode);\n\n  const decipher = browserifyAes.createDecipheriv(mode, key, iv);\n  decipher.setAutoPadding(pkcs7PaddingEnabled);\n\n  const encrypted = decipher.update(cypherText);\n  const final = decipher.final();\n\n  return Buffer.concat([encrypted, final]);\n}\n"]}